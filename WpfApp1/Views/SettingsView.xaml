<UserControl x:Class="WpfApp1.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:WpfApp1.Views"
             xmlns:viewModels="clr-namespace:WpfApp1.ViewModels"
             xmlns:converters="clr-namespace:WpfApp1.Converters"
             mc:Ignorable="d"
             d:DesignHeight="500" d:DesignWidth="800">

    <UserControl.DataContext>
        <viewModels:SettingsViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <!-- Converters -->
        <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <converters:LanguageConverter x:Key="LanguageConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Color Resources -->
        <SolidColorBrush x:Key="PrimaryBrush" Color="#6C5CE7"/>
        <SolidColorBrush x:Key="WhiteBrush" Color="White"/>
        <SolidColorBrush x:Key="BorderBrush" Color="#E0E0E0"/>
        <SolidColorBrush x:Key="TextPrimaryBrush" Color="#2D3436"/>
        <SolidColorBrush x:Key="TextSecondaryBrush" Color="#636E72"/>
        <SolidColorBrush x:Key="ItemHoverBackgroundBrush" Color="#F8F9FA"/>
        <SolidColorBrush x:Key="AvatarPlaceholderBackground" Color="#DDD6FE"/>
        <CornerRadius x:Key="DefaultCornerRadius">8</CornerRadius>

        <!-- Animation for menu buttons -->
        <Storyboard x:Key="ButtonHoverAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                            To="#E8E8E8" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="ButtonLeaveAnimation">
            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                            To="Transparent" Duration="0:0:0.2"/>
        </Storyboard>

        <!-- Modern Card Style -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="{StaticResource DefaultCornerRadius}"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Margin" Value="0,10"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10" ShadowDepth="2" Opacity="0.1" Color="Gray"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Menu Button Style -->
        <Style x:Key="ModernMenuButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="15,12"/>
            <Setter Property="Margin" Value="5,3"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="8"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource ItemHoverBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#E0E0E0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Action Button Style -->
        <Style x:Key="ModernActionButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="20,10"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="8"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#5A52E3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#4A42D3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#CCCCCC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Thêm Cursor đổi khi bị Disable -->
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Cursor" Value="Arrow"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Danger Button Style -->
        <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernActionButtonStyle}">
            <Setter Property="Background" Value="#FF4757"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="8"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#FF3742"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#FF2732"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#CCCCCC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern ComboBox Style -->
        <Style TargetType="ComboBox">
            <Setter Property="Height" Value="35"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <Grid>
                                <ToggleButton x:Name="toggleButton"
                                              Background="Transparent"
                                              BorderThickness="0"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press">
                                    <Path x:Name="Arrow"
                                          Fill="{StaticResource TextSecondaryBrush}"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Center"
                                          Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                          Margin="0,0,10,0"/>
                                </ToggleButton>
                                <ContentPresenter x:Name="contentPresenter"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern CheckBox Style -->
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="0,10"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="checkBorder"
                                    Width="20" Height="20"
                                    Background="{StaticResource WhiteBrush}"
                                    BorderBrush="{StaticResource BorderBrush}"
                                    BorderThickness="2"
                                    CornerRadius="4">
                                <Path x:Name="checkMark"
                                      Data="M1,4.6 L4.4,8 L11,1.4"
                                      Stroke="{StaticResource PrimaryBrush}"
                                      StrokeThickness="2"
                                      Visibility="Collapsed"/>
                            </Border>
                            <ContentPresenter Margin="8,0,0,0" VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="checkBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="checkBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern RadioButton Style -->
        <Style TargetType="RadioButton">
            <Setter Property="Margin" Value="0,8"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="radioBorder"
                                    Width="20" Height="20"
                                    Background="{StaticResource WhiteBrush}"
                                    BorderBrush="{StaticResource BorderBrush}"
                                    BorderThickness="2"
                                    CornerRadius="10">
                                <Ellipse x:Name="radioCheck"
                                         Width="8" Height="8"
                                         Fill="{StaticResource PrimaryBrush}"
                                         Visibility="Collapsed"/>
                            </Border>
                            <ContentPresenter Margin="8,0,0,0" VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="radioCheck" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="radioBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="radioBorder" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Text Styles -->
        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
        </Style>

        <Style x:Key="SubHeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
            <Setter Property="Margin" Value="0,15,0,8"/>
        </Style>

        <Style x:Key="BodyTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="LineHeight" Value="20"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="MenuItemTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="MenuIconStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Margin" Value="0,0,12,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
        </Style>
    </UserControl.Resources>

    <Grid Background="#FAFAFA">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Sidebar Menu -->
        <Border Grid.Column="0" Background="{StaticResource WhiteBrush}"
                BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,0,1,0">
            <StackPanel Margin="0,30,0,0">
                <TextBlock Text="{DynamicResource Settings}" FontSize="20" FontWeight="Bold"
                           Foreground="{StaticResource TextPrimaryBrush}"
                           Margin="20,0,20,30" HorizontalAlignment="Center"/>

                <Button Style="{StaticResource ModernMenuButtonStyle}" Command="{Binding ShowAccountInfoCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="👤" Style="{StaticResource MenuIconStyle}"/>
                        <TextBlock Text="{DynamicResource Account}" Style="{StaticResource MenuItemTextStyle}"/>
                    </StackPanel>
                </Button>

                <Button Style="{StaticResource ModernMenuButtonStyle}" Command="{Binding ShowSettingsCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="🎨" Style="{StaticResource MenuIconStyle}"/>
                        <TextBlock Text="{DynamicResource Appearance}" Style="{StaticResource MenuItemTextStyle}"/>
                    </StackPanel>
                </Button>

                <Button Style="{StaticResource ModernMenuButtonStyle}" Command="{Binding ShowDataCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="💾" Style="{StaticResource MenuIconStyle}"/>
                        <TextBlock Text="{DynamicResource Data}" Style="{StaticResource MenuItemTextStyle}"/>
                    </StackPanel>
                </Button>

                <Button Style="{StaticResource ModernMenuButtonStyle}" Command="{Binding ShowLanguageCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="🌐" Style="{StaticResource MenuIconStyle}"/>
                        <TextBlock Text="{DynamicResource Language}" Style="{StaticResource MenuItemTextStyle}"/>
                    </StackPanel>
                </Button>

                <Button Style="{StaticResource ModernMenuButtonStyle}" Command="{Binding ShowSupportCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="❓" Style="{StaticResource MenuIconStyle}"/>
                        <TextBlock Text="{DynamicResource Support}" Style="{StaticResource MenuItemTextStyle}"/>
                    </StackPanel>
                </Button>

                <Separator Margin="15,20" Background="{StaticResource BorderBrush}"/>

                <Button Style="{StaticResource ModernMenuButtonStyle}" Command="{Binding LogoutCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="🚪" Style="{StaticResource MenuIconStyle}" Foreground="#FF4757"/>
                        <TextBlock Text="{DynamicResource Logout}" Style="{StaticResource MenuItemTextStyle}" Foreground="#FF4757"/>
                    </StackPanel>
                </Button>

                <Button Style="{StaticResource ModernMenuButtonStyle}" Command="{Binding ExitCommand}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="❌" Style="{StaticResource MenuIconStyle}"/>
                        <TextBlock Text="{DynamicResource ExitApp}" Style="{StaticResource MenuItemTextStyle}"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Border>

        <!-- Main Content Area -->
        <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto" Padding="30">
            <StackPanel>
                <!-- Account Info Section -->
                <Border Style="{StaticResource CardStyle}"
                        Visibility="{Binding CurrentView, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=AccountInfo}">
                    <StackPanel>
                        <TextBlock Text="{DynamicResource AccountInfo}" Style="{StaticResource HeaderTextStyle}"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Avatar -->
                            <Border Grid.Row="0" Grid.Column="0" Grid.RowSpan="3"
                                Width="80" Height="80" CornerRadius="40"
                                Margin="0,0,20,0">              
                                <!-- Avatar Image Background -->
                                <Border.Background>
                                    <ImageBrush x:Name="AvatarImageBrush" Stretch="UniformToFill">
                                        <ImageBrush.ImageSource>
                                            <Binding Path="UserAvatarUrl">
                                                <Binding.TargetNullValue>
                                                    <x:Null/>
                                                </Binding.TargetNullValue>
                                            </Binding>
                                        </ImageBrush.ImageSource>
                                    </ImageBrush>
                                </Border.Background>

                                <!-- Đây là phần tử duy nhất: một Grid chứa tất cả nội dung -->
                                <Grid>
                                    <!-- Fallback Icon khi không có avatar -->
                                    <TextBlock Text="👤" FontSize="40"
                   HorizontalAlignment="Center" VerticalAlignment="Center"
                   Foreground="White">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding UserAvatarUrl}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding UserAvatarUrl}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                    <!-- Loading Indicator -->
                                    <Border x:Name="LoadingBorder"
                                    
                                    CornerRadius="40"
                                    Visibility="{Binding IsLoadingAvatar, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </Grid>
                            </Border>

                            <!-- User Info -->
                            <StackPanel Grid.Row="0" Grid.Column="1">
                                <TextBlock Text="{DynamicResource Username}" Style="{StaticResource SubHeaderTextStyle}"/>
                                <TextBlock Text="{Binding UserName, FallbackValue='Not Available'}" 
                                           Style="{StaticResource BodyTextStyle}" FontWeight="SemiBold"/>

                                <TextBlock Text="{DynamicResource Email}" Style="{StaticResource SubHeaderTextStyle}"/>
                                <TextBlock Text="{Binding UserEmail, FallbackValue='Not Available'}" 
                                           Style="{StaticResource BodyTextStyle}"/>

                                <TextBlock Text="{DynamicResource JoinDate}" Style="{StaticResource SubHeaderTextStyle}"/>
                                <TextBlock Text="{Binding JoinDate, StringFormat='dd/MM/yyyy', FallbackValue='Not Available'}" 
                                           Style="{StaticResource BodyTextStyle}"/>
                            </StackPanel>
                        </Grid>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                            <Button Content="{DynamicResource Edit}" Style="{StaticResource ModernActionButtonStyle}"
                                    Command="{Binding EditProfileCommand}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>

                <!-- Settings Section -->
                <Border Style="{StaticResource CardStyle}"
                        Visibility="{Binding CurrentView, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Settings}">
                    <StackPanel>
                        <TextBlock Text="{DynamicResource AppearanceDisplay}" Style="{StaticResource HeaderTextStyle}"/>

                        <TextBlock Text="{DynamicResource DisplayMode}" Style="{StaticResource SubHeaderTextStyle}"/>
                        <ComboBox ItemsSource="{Binding Themes}" 
                                  SelectedItem="{Binding SelectedTheme}"
                                  DisplayMemberPath="Name"
                                  SelectedValuePath="Value"
                                  Width="200" HorizontalAlignment="Left"/>

                        <TextBlock Text="{DynamicResource Notifications}" Style="{StaticResource SubHeaderTextStyle}"/>
                        <CheckBox Content="{DynamicResource EnableSoundNotifications}" 
                                  IsChecked="{Binding EnableNotifications}"/>
                        <CheckBox Content="{DynamicResource ShowDesktopNotifications}" 
                                  IsChecked="{Binding ShowDesktopNotifications}"/>
                        <CheckBox Content="{DynamicResource NotifyWhenOffline}" 
                                  IsChecked="{Binding NotifyWhenOffline}"/>

                        <TextBlock Text="{DynamicResource DisplayLanguage}" Style="{StaticResource SubHeaderTextStyle}"/>
                        <ComboBox ItemsSource="{Binding Languages}" 
                                  SelectedItem="{Binding SelectedLanguage}"
                                  DisplayMemberPath="Name"
                                  SelectedValuePath="Code"
                                  Width="200" HorizontalAlignment="Left"/>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                            <Button Content="{DynamicResource SaveChanges}" Style="{StaticResource ModernActionButtonStyle}"
                                    Command="{Binding SaveSettingsCommand}"
                                    IsEnabled="{Binding HasChanges}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>

                <!-- Data Management Section -->
                <Border Style="{StaticResource CardStyle}"
                        Visibility="{Binding CurrentView, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Data}">
                    <StackPanel>
                        <TextBlock Text="{DynamicResource DataManagement}" Style="{StaticResource HeaderTextStyle}"/>

                        <TextBlock Text="{DynamicResource ManageYourData}"
                                   Style="{StaticResource BodyTextStyle}"/>

                        <Border Background="#FFF9E6" BorderBrush="#FFE58F" BorderThickness="1"
                                CornerRadius="8" Padding="15" Margin="0,15">
                            <StackPanel>
                                <TextBlock Text="{DynamicResource Warning}" FontWeight="Bold" 
                                           Foreground="#D48806" Margin="0,0,0,5"/>
                                <TextBlock Text="{DynamicResource DeleteDataWarning}"
                                           Foreground="#D48806" TextWrapping="Wrap"/>
                            </StackPanel>
                        </Border>

                        <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                            <Button Content="{DynamicResource ExportData}" Style="{StaticResource ModernActionButtonStyle}"
                                    Command="{Binding ExportDataCommand}" Margin="0,0,10,0"/>
                            <Button Content="{DynamicResource DeleteAllData}" Style="{StaticResource DangerButtonStyle}"
                                    Command="{Binding DeleteDataCommand}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>

                <!-- Language Section -->
                <Border Style="{StaticResource CardStyle}"
                        Visibility="{Binding CurrentView, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Language}">
                    <StackPanel>
                        <TextBlock Text="{DynamicResource Language}" Style="{StaticResource HeaderTextStyle}"/>

                        <TextBlock Text="{DynamicResource SelectLanguage}" Style="{StaticResource BodyTextStyle}" Margin="0,0,0,15"/>

                        <StackPanel>
                            <RadioButton Content="🇻🇳 Tiếng Việt"
                                         GroupName="Language"
                                         IsChecked="{Binding SelectedLanguage, Converter={StaticResource LanguageConverter}, ConverterParameter='vi-VN'}"
                                         Command="{Binding ChangeLanguageCommand}"
                                         CommandParameter="vi-VN"
                                         FontSize="14"/>
                            <RadioButton Content="🇺🇸 English"
                                         GroupName="Language"
                                         IsChecked="{Binding SelectedLanguage, Converter={StaticResource LanguageConverter}, ConverterParameter='en-US'}"
                                         Command="{Binding ChangeLanguageCommand}"
                                         CommandParameter="en-US"
                                         FontSize="14"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                            <Button Content="{DynamicResource Apply}" Style="{StaticResource ModernActionButtonStyle}"
                                    Command="{Binding ApplyLanguageCommand}"
                                    IsEnabled="{Binding HasLanguageChanges}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>

                <!-- Support Section -->
                <Border Style="{StaticResource CardStyle}"
                        Visibility="{Binding CurrentView, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Support}">
                    <StackPanel>
                        <TextBlock Text="{DynamicResource SupportHelp}" Style="{StaticResource HeaderTextStyle}"/>

                        <TextBlock Text="{DynamicResource NeedHelp}"
                                   Style="{StaticResource BodyTextStyle}"/>

                        <Grid Margin="0,15">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" Background="#F0F8FF" BorderBrush="#87CEEB"
                                    BorderThickness="1" CornerRadius="8" Padding="15" Margin="0,0,10,0">
                                <StackPanel>
                                    <TextBlock Text="{DynamicResource EmailSupport}" FontWeight="SemiBold" Margin="0,0,0,5"/>
                                    <TextBlock Text="support@chatapp.com" Foreground="{StaticResource PrimaryBrush}"/>
                                </StackPanel>
                            </Border>

                            <Border Grid.Column="1" Background="#F0F8F0" BorderBrush="#90EE90"
                                    BorderThickness="1" CornerRadius="8" Padding="15" Margin="10,0,0,0">
                                <StackPanel>
                                    <TextBlock Text="{DynamicResource Hotline}" FontWeight="SemiBold" Margin="0,0,0,5"/>
                                    <TextBlock Text="1900-1234" Foreground="{StaticResource PrimaryBrush}"/>
                                </StackPanel>
                            </Border>
                        </Grid>

                        <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                            <Button Content="{DynamicResource SendFeedback}" Style="{StaticResource ModernActionButtonStyle}"
                                    Command="{Binding SendFeedbackCommand}" Margin="0,0,10,0"/>
                            <Button Content="{DynamicResource UserGuide}" Style="{StaticResource ModernActionButtonStyle}"
                                    Command="{Binding ShowUserGuideCommand}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>