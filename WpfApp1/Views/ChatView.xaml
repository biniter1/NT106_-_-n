<UserControl x:Class="WpfApp1.Views.ChatView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:WpfApp1.Views"
             xmlns:models="clr-namespace:WpfApp1.Models"
             xmlns:converters="clr-namespace:WpfApp1.Converters"
             xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="940">
    <UserControl.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="PrimaryBrush" Color="#6c63ff"/>
            <SolidColorBrush x:Key="LightGrayBrush" Color="#f0f0f0"/>
            <SolidColorBrush x:Key="WhiteBrush" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="Chatarea" Color="#FAFAFA"/>
            <SolidColorBrush x:Key="Filearea" Color="#F7F9FB"/>
            <SolidColorBrush x:Key="TextPrimaryBrush" Color="#333333"/>
            <SolidColorBrush x:Key="TextSecondaryBrush" Color="#888888"/>
            <SolidColorBrush x:Key="OnlineStatusBrush" Color="Green"/>
            <SolidColorBrush x:Key="BorderBrush" Color="#E0E0E0"/>
            <SolidColorBrush x:Key="ItemHoverBackgroundBrush" Color="#D8D8D8"/>
            <SolidColorBrush x:Key="ItemSelectedBackgroundBrush" Color="#FBEFF5"/>
            <SolidColorBrush x:Key="IconBackgroundPdf" Color="#E85050"/>
            <SolidColorBrush x:Key="IconBackgroundExcel" Color="#1D8C4D"/>
            <SolidColorBrush x:Key="IconBackgroundImage" Color="#50A6E8"/>
            <SolidColorBrush x:Key="IconBackgroundWord" Color="#2B579A"/>
            <SolidColorBrush x:Key="IconBackgroundPpt" Color="#CD853F"/>
            <SolidColorBrush x:Key="IconBackgroundDefault" Color="#B0BEC5"/>
            <SolidColorBrush x:Key="BlockedOverlayBrush" Color="#80E0E0E0"/>
            <SolidColorBrush x:Key="AvatarPlaceholderBackground" Color="#FFB74D"/>
            
            <CornerRadius x:Key="DefaultCornerRadius">10</CornerRadius>
            
            <converters:BooleanToColorConverter x:Key="BooleanToColorConverter"/>
            <converters:StringNullOrEmptyToVisibilityConverter x:Key="StringNullOrEmptyToVisibilityConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:MessageBackgroundConverter x:Key="MessageBackgroundConverter"/>
            <converters:MessageAlignmentConverter x:Key="MessageAlignmentConverter"/>
            <converters:TextColorConverter x:Key="TextColorConverter"/>
            <converters:FileTypeToIconConverter x:Key="FileTypeToIconConverter"/>
            <converters:ToLowerConverter x:Key="ToLowerConverter"/>
            <converters:NameToFallbackConverter x:Key="NameToFallbackConverter"/>

            <Style x:Key="SearchBoxPlaceholderStyle" TargetType="TextBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <TextBlock Text="{DynamicResource SearchPlaceholderChat}"
                                           Foreground="{StaticResource TextSecondaryBrush}"
                                           Visibility="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}" />
                                <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ContextMenu x:Key="FileMessageContextMenu" DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                <MenuItem Header="Tải xuống" 
                          Command="{Binding DownloadMessageFileCommand}" 
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                <MenuItem Header="Trả lời"
                          Command="{Binding ReplyToMessageCommand}"
                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>  
                <MenuItem Header="Xóa tin nhắn"
              Command="{Binding DeleteMessageCommand}"
              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">

                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PlacementTarget.DataContext.IsMine, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
            </ContextMenu>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="280"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0" Background="{StaticResource WhiteBrush}" Padding="10,10,10,10" BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,0,1,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <DockPanel Grid.Row="0" Margin="0,0,0,10">
                    <TextBlock Text="{DynamicResource MessagesTitle}" FontWeight="Bold" FontSize="16" VerticalAlignment="Center" Foreground="{StaticResource TextPrimaryBrush}"/>
                    <Button FontFamily="Segoe MDL2 Assets"
                            Content="" ToolTip="{DynamicResource AddFriendTooltip}"
                            Command="{Binding DataContext.ShowAddFriendPopupCommand, RelativeSource={RelativeSource AncestorType=Window}}" 
                            Width="40" Height="40" FontSize="30" Background="Transparent" Foreground="Gray" BorderThickness="0" Margin="5" DockPanel.Dock="Right" HorizontalAlignment="Right" />
                </DockPanel>
                <Border Grid.Row="1" CornerRadius="15" Background="{StaticResource LightGrayBrush}" BorderBrush="{StaticResource BorderBrush}" Padding="5,5" BorderThickness="1">
                    <TextBox x:Name="SearchContact" Style="{StaticResource SearchBoxPlaceholderStyle}" />
                </Border>
                <ListBox Grid.Row="2" x:Name="ContactListBox" ItemsSource="{Binding Contacts}" SelectedItem="{Binding SelectedContact, Mode=TwoWay}" BorderThickness="0" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="Single">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:Contact}">
                            <Border Padding="8" Margin="0,0,0,5" CornerRadius="5">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Border Grid.Column="0" Width="40" Height="40" CornerRadius="20" Margin="0,0,10,0" Background="#20000000" Visibility="{Binding IsLoadingAvatar, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>

                                    <Image Grid.Column="0" Width="40" Height="40" Margin="0,0,10,0" VerticalAlignment="Center" Source="{Binding AvatarUrl}" Stretch="UniformToFill">
                                        <Image.Clip>
                                            <EllipseGeometry Center="20,20" RadiusX="20" RadiusY="20"/>
                                        </Image.Clip>
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsLoadingAvatar}" Value="True">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>

                                    <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                        <TextBlock Text="{Binding Name}" FontWeight="SemiBold" Foreground="{StaticResource TextPrimaryBrush}" Margin="0,0,0,2"/>
                                        <TextBlock Text="{Binding LastMessage}" FontSize="11" Foreground="{StaticResource TextSecondaryBrush}" TextTrimming="CharacterEllipsis"/>
                                    </StackPanel>

                                    <Border Grid.ColumnSpan="3" Background="{StaticResource BlockedOverlayBrush}" CornerRadius="5"
                                            Visibility="{Binding IsBlockedByMe, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TextBlock Text="ĐÃ CHẶN" Foreground="Black" Opacity="0.5" FontWeight="Bold" FontSize="10"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    
                                    <Ellipse Grid.Column="2" 
                     Width="8" 
                     Height="8" 
                     Fill="Crimson" 
                     Margin="5,0"
                     VerticalAlignment="Center"
                     Visibility="{Binding HasUnreadMessages, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                    <TextBlock Grid.Column="3" Text="" FontFamily="Segoe Fluent Icons" FontSize="8" VerticalAlignment="Bottom" Margin="5,0,0,5">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsOnline}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource OnlineStatusBrush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Button Grid.Column="4" 
                    Content="&#xE74D;" 
                    FontFamily="Segoe MDL2 Assets" 
                    FontSize="14" 
                    Width="30" Height="30"
                    Background="Transparent" 
                    BorderThickness="0"
                    Foreground="Gray"
                    VerticalAlignment="Center"
                    ToolTip="Xóa liên hệ này"
                    Command="{Binding DataContext.DeleteContactCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                    CommandParameter="{Binding}">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>

                            <!-- 1. Dùng Tag làm "cầu nối" để truyền DataContext (ChatViewModel) vào -->
                            <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}"/>

                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <!-- 2. Gán DataContext của ContextMenu vào Tag của ListBoxItem -->
                                    <ContextMenu DataContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Header="Chặn người dùng này"
                              Command="{Binding BlockContactCommand}"
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                            <MenuItem.Style>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding PlacementTarget.DataContext.IsBlockedByMe, RelativeSource={RelativeSource Self}}" Value="True">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>

                                        <MenuItem Header="Bỏ chặn người dùng này"
                              Command="{Binding UnblockContactCommand}"
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                            <MenuItem.Style>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding PlacementTarget.DataContext.IsBlockedByMe, RelativeSource={RelativeSource Self}}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                        </MenuItem>

                                        <Separator />
                                        <MenuItem Header="Xóa liên hệ" 
                              Command="{Binding DeleteContactCommand}"
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"/>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border x:Name="ItemBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource ItemHoverBackgroundBrush}"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource ItemSelectedBackgroundBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Grid>
        </Border>

        <Grid Grid.Column="1" Background="{StaticResource Chatarea}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,0,0,1" Padding="10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Border Width="35" Height="35" CornerRadius="17.5" Margin="0,0,10,0" Background="#20000000" Visibility="{Binding SelectedContact.IsLoadingAvatar, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                        </Border>
                        <Image Width="35" Height="35" 
                           Source="{Binding SelectedContact.AvatarUrl}" 
                           Stretch="UniformToFill">
                            <Image.Clip>
                                <EllipseGeometry Center="17.5,17.5" RadiusX="17.5" RadiusY="17.5"/>
                            </Image.Clip>
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedContact.IsLoadingAvatar}" Value="True">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <StackPanel VerticalAlignment="Center" Width="100">
                            <TextBlock Text="{Binding SelectedContact.Name, Converter={StaticResource NameToFallbackConverter}}"
                                   FontWeight="Bold" FontSize="14" Foreground="{StaticResource TextPrimaryBrush}"/>
                            <TextBlock Text="{Binding TypingStatusText}"
                               FontSize="11" FontStyle="Italic" Foreground="Gray"
                               Visibility="{Binding TypingStatusText, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}" Height="14"/>
                            <TextBlock FontSize="11">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="{DynamicResource OfflineStatus}"/>
                                        <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedContact.IsOnline}" Value="True">
                                                <Setter Property="Text" Value="{DynamicResource OnlineStatus}"/>
                                                <Setter Property="Foreground" Value="{StaticResource OnlineStatusBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                        <Button FontFamily="Segoe Fluent Icons" Content="" ToolTip="{DynamicResource VideoCallTooltip}"
                                Command="{Binding StartVideoCallCommand}"
                                CommandParameter="{Binding SelectedContact}"
                                Width="40" Height="40" FontSize="18" Background="Transparent" Foreground="Gray" BorderThickness="0" Margin="5,0"/>
                        <Button FontFamily="Segoe Fluent Icons" Content="" ToolTip="{DynamicResource VoiceCallTooltip}"
                                Command="{Binding StartVoiceCallCommand}"
                                CommandParameter="{Binding SelectedContact}"
                                Width="40" Height="40" FontSize="18" Background="Transparent" Foreground="Gray" BorderThickness="0" Margin="5,0"/>
                    </StackPanel>
                </Grid>
            </Border>

            <ScrollViewer Grid.Row="1" x:Name="MessagesScrollViewer" VerticalScrollBarVisibility="Auto" Padding="10">
                <ItemsControl ItemsSource="{Binding Messages}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:Message}">
                            <Border MaxWidth="400" 
                                    Background="{Binding IsMine, Converter={StaticResource MessageBackgroundConverter}}" 
                                    CornerRadius="10" Padding="10" Margin="5" 
                                    HorizontalAlignment="{Binding IsMine, Converter={StaticResource MessageAlignmentConverter}}" 
                                    ContextMenu="{StaticResource FileMessageContextMenu}"
                                    Tag="{Binding SelectedContact, RelativeSource={RelativeSource AncestorType=UserControl}}">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <!-- Style mặc định cho tin nhắn của bạn và người khác -->
                                        <Setter Property="Background" Value="{Binding IsMine, Converter={StaticResource MessageBackgroundConverter}}"/>
                                        <Setter Property="HorizontalAlignment" Value="{Binding IsMine, Converter={StaticResource MessageAlignmentConverter}}"/>
                                        <Style.Triggers>
                                            <!-- Trigger cho tin nhắn hệ thống (ví dụ: thông báo đã chặn) -->
                                            <DataTrigger Binding="{Binding IsSystemMessage}" Value="True">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                                <Setter Property="MaxWidth" Value="500"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <StackPanel>
                                    <!-- KHUNG TRÍCH DẪN (MỚI) -->
                                    <Border Background="#10000000" Padding="8" CornerRadius="6" Margin="0,0,0,5"
                                            Visibility="{Binding IsReply, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <StackPanel>
                                            <TextBlock Text="{Binding ReplyToSenderName}" FontWeight="Bold" 
                                                       FontSize="11" Foreground="{Binding IsMine, Converter={StaticResource TextColorConverter}}"/>
                                            <TextBlock Text="{Binding ReplyToMessageContent}" Opacity="0.8" FontSize="11"
                                                       TextTrimming="CharacterEllipsis"
                                                       Foreground="{Binding IsMine, Converter={StaticResource TextColorConverter}}"/>
                                        </StackPanel>
                                    </Border>

                                    <!-- Nội dung tin nhắn chính (chữ, ảnh, thoại) -->
                                    <Grid>
                                        <emoji:TextBlock Text="{Binding Content}" TextWrapping="Wrap" FontSize="14"
                                                       Foreground="{Binding IsMine, Converter={StaticResource TextColorConverter}}"/>
                                        <Image Source="{Binding ImageUrl}" MaxHeight="400" MaxWidth="400" 
                                               Stretch="Uniform" Margin="0" 
                                               Visibility="{Binding IsImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <Image.InputBindings>
                                                <MouseBinding MouseAction="LeftDoubleClick" 
                                                              Command="{Binding DataContext.ViewFullImageCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                              CommandParameter="{Binding ImageUrl}" />
                                            </Image.InputBindings>
                                        </Image>
                                        <local:VoiceMessageView AudioUrl="{Binding VoiceMessageUrl}" Duration="{Binding VoiceMessageDuration}"
                                                                HorizontalAlignment="Left">
                                            <local:VoiceMessageView.Style>
                                                <Style TargetType="local:VoiceMessageView">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsVoiceMessage}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </local:VoiceMessageView.Style>
                                        </local:VoiceMessageView>
                                    </Grid>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
            <!--Khung review -->
            <Border Grid.Row="2" x:Name="ReplyPreviewBorder"
                    Background="#F0F2F5" BorderBrush="{StaticResource BorderBrush}" 
                    BorderThickness="0,1,0,0" Padding="10,5" Margin="10,0,10,0"
                    CornerRadius="8,8,0,0"
                    Visibility="{Binding IsReplying, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedContact.IsBlockedByMe}" Value="True">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <TextBlock Text="{Binding MessageToReplyTo.ReplyToSenderName, FallbackValue='Đang trả lời...'}" 
                                   FontWeight="Bold" Foreground="{StaticResource PrimaryBrush}" FontSize="12"/>
                        <TextBlock Text="{Binding MessageToReplyTo.Content}" 
                                   TextTrimming="CharacterEllipsis" Foreground="Gray" FontSize="12"/>
                    </StackPanel>

                    <Button Grid.Column="1" Content="&#xE711;" FontFamily="Segoe MDL2 Assets" 
                            Width="24" Height="24" Background="Transparent" BorderThickness="0"
                            ToolTip="Hủy trả lời"
                            Command="{Binding CancelReplyCommand}"/>
                </Grid>
            </Border>
            
            <!-- Phần Grid chứa các nút input (chỉ hiển thị phần cần sửa) -->
            <Border Grid.Row="3" BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,1,0,0" Padding="10" Background="{StaticResource WhiteBrush}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Nút đính kèm file -->
                    <Button Grid.Column="0" Width="40" Height="40" Background="Transparent" BorderThickness="0" ToolTip="{DynamicResource AttachFileTooltip}" Command="{Binding SelectFileCommand}">
                        <TextBlock Text="📎" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Button>

                    <!-- Nút chọn emoji -->
                    <Button Grid.Column="1" Background="White" BorderThickness="0">
                        <emoji:Picker 
              Background="Transparent"
              FontSize="30" 
              Picked="Picker_Picked"/>
                    </Button>

                    <!-- Ô nhập tin nhắn -->
                    <Border Grid.Column="2" CornerRadius="15" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" Background="{StaticResource WhiteBrush}" Margin="0,0,10,0">
                        <TextBox Text="{Binding NewMessageText, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Padding="12,4" FontSize="14" BorderThickness="0" Background="Transparent" Foreground="{StaticResource TextPrimaryBrush}">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter"
                    Command="{Binding SendMessageCommand}"
                    CommandParameter="{Binding SelectedContact}"/>
                            </TextBox.InputBindings>
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TextBox">
                                                <Grid>
                                                    <TextBlock Text="{DynamicResource MessagePlaceholder}" Foreground="{StaticResource TextSecondaryBrush}" FontStyle="Italic" Margin="12,4" VerticalAlignment="Center" IsHitTestVisible="False" Visibility="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}" />
                                                    <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Border>

                    <!-- Nút ghi âm tin nhắn thoại -->
                    <Button Grid.Column="3" Width="40" Height="40" Background="Transparent" BorderThickness="0"
            ToolTip="Ghi âm tin nhắn thoại"
            Command="{Binding RecordVoiceMessageCommand}">
                        <TextBlock Text="&#xE720;" FontFamily="Segoe MDL2 Assets" FontSize="20"
            Foreground="{Binding IsRecording, Converter={StaticResource BooleanToColorConverter}, ConverterParameter=Crimson;Gray}"/>
                    </Button>

                    <!-- Nút gửi tin nhắn -->
                    <Button Grid.Column="4" Width="40" Height="40" Background="Transparent" BorderThickness="0" ToolTip="{DynamicResource SendTooltip}" Command="{Binding SendMessageCommand}" CommandParameter="{Binding SelectedContact}">
                        <TextBlock Text="" Margin="0,15,0,0" FontFamily="Segoe Fluent Icons" FontSize="20" Foreground="{StaticResource PrimaryBrush}">
                            <TextBlock.RenderTransform>
                                <RotateTransform Angle="-45"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Button>
                </Grid>
            </Border>
        </Grid>

        <Border Grid.Column="2" Background="{StaticResource Filearea}" Padding="10" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1,0,0,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <DockPanel Grid.Row="0" Margin="0,10,0,10">
                    <TextBlock Text="{DynamicResource DirectoryTitle}" FontWeight="Bold" FontSize="16" VerticalAlignment="Center" Foreground="{StaticResource TextPrimaryBrush}"/>
                    <Button Content="⋮" FontSize="25" Width="30" Height="30" ToolTip="{DynamicResource MoreOptionsTooltip}" VerticalAlignment="Center" Background="Transparent" BorderThickness="0" HorizontalAlignment="Right" />
                </DockPanel>
                <ListBox Grid.Row="1" x:Name="FileListBox" ItemsSource="{Binding Files}" BorderThickness="0" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="Single">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:FileItem}">
                            <Grid Margin="0,0,0,8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Width="32" Height="32" CornerRadius="5" Margin="0,0,10,0" VerticalAlignment="Center">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Background" Value="{StaticResource IconBackgroundDefault}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IconPathOrType, Converter={StaticResource ToLowerConverter}}" Value="pdf">
                                                    <Setter Property="Background" Value="{StaticResource IconBackgroundPdf}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IconPathOrType, Converter={StaticResource ToLowerConverter}}" Value="xlsx">
                                                    <Setter Property="Background" Value="{StaticResource IconBackgroundExcel}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IconPathOrType, Converter={StaticResource ToLowerConverter}}" Value="xls">
                                                    <Setter Property="Background" Value="{StaticResource IconBackgroundExcel}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IconPathOrType, Converter={StaticResource ToLowerConverter}}" Value="docx">
                                                    <Setter Property="Background" Value="{StaticResource IconBackgroundWord}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IconPathOrType, Converter={StaticResource ToLowerConverter}}" Value="doc">
                                                    <Setter Property="Background" Value="{StaticResource IconBackgroundWord}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IconPathOrType, Converter={StaticResource ToLowerConverter}}" Value="png">
                                                    <Setter Property="Background" Value="{StaticResource IconBackgroundImage}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IconPathOrType, Converter={StaticResource ToLowerConverter}}" Value="jpg">
                                                    <Setter Property="Background" Value="{StaticResource IconBackgroundImage}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IconPathOrType, Converter={StaticResource ToLowerConverter}}" Value="jpeg">
                                                    <Setter Property="Background" Value="{StaticResource IconBackgroundImage}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IconPathOrType, Converter={StaticResource ToLowerConverter}}" Value="ppt">
                                                    <Setter Property="Background" Value="{StaticResource IconBackgroundPpt}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBlock FontFamily="Segoe Fluent Icons" FontSize="16" Text="{Binding IconPathOrType, Converter={StaticResource FileTypeToIconConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White"/>
                                </Border>
                                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                    <TextBlock Text="{Binding FileName}" FontWeight="SemiBold" TextTrimming="CharacterEllipsis" ToolTip="{Binding FileName}" Foreground="{StaticResource TextPrimaryBrush}"/>
                                    <TextBlock Text="{Binding FileInfo}" FontSize="11" Foreground="{StaticResource TextSecondaryBrush}"/>
                                </StackPanel>
                                <Button Grid.Column="2" 
                                        FontFamily="Segoe Fluent Icons" 
                                        Content="&#xE896;" 
                                        ToolTip="{DynamicResource DownloadTooltip}" 
                                        Width="30" Height="30" 
                                        Margin="10,0,0,0" 
                                        FontSize="16" 
                                        Background="Transparent" 
                                        BorderThickness="0" 
                                        Foreground="Gray" 
                                        HorizontalAlignment="Right"
                                        Command="{Binding DataContext.DownloadFileCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                        CommandParameter="{Binding}"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0,2"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border x:Name="ItemBorder" Background="Transparent" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource ItemHoverBackgroundBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Grid>
        </Border>
    </Grid>
</UserControl>